version: "3.8"
services:
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./nginx-certbot/data/nginx:/etc/nginx/conf.d
      - ./nginx-certbot/data/certbot/conf:/etc/letsencrypt
      - ./nginx-certbot/data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx-certbot/data/certbot/conf:/etc/letsencrypt
  #     - ./nginx-certbot/data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:test
    container_name: server
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-docker
      DATABASE_TYPE: postgres
      REDIS_URL: redis://cache
      NODE_ENV: development
      JWT_SECRET: some_jwt_secret
      COOKIE_SECRET: some_cookie_secret
      PORT: 9000
    ports:
      - 9000:9000
      - 7001:7001 
    expose:
      - 9000

  postgres:
    image: postgres:10.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-docker
      STORE_CORS: http://store.myhost.local
    expose:
      - 5432

  redis:
    image: redis
    container_name: cache
    expose:
      - 6379

  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    image: storefront:test
    container_name: storefront
    depends_on:
      - backend
    ports:
      - 8000:8000
    environment:
      NEXT_PUBLIC_MEDUSA_BACKEND_URL: http://backend.myhost.local
      NEXT_PUBLIC_BASE_URL: http://backend.myhost.local